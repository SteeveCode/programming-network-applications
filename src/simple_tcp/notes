How To Program A Network Application

# Create a server class. The server class will contain two types of socket objects:
1. Server socket: holds a port in the operating system for our application
2. Client socket
# Create a new server socket object with the port number to be used passed in as constructor argument.
# Declare a new client socket variable but don't initialize it.
# Call the accept() method of the server socket. This will return a client socket object which is passed to the client
socket variable above. Note, the accept() method is a blocking method i.e. java will stop reading line of code when it
gets to the accept() method and wait for an incoming connection to be accepted before continuing with the rest of the code
# Create input & output buffers. These are places where we store both data going out of our socket and data coming into
our socket. They take the following parameters:
Params:
in - A character-input stream
out â€“ A character-output stream, & a boolean (autoFlush); if true, the println, printf, or format methods will flush
the output buffer
# Send a message to the client using the socket writer object outSocket.println
# # Receive and store message from the client using the socket reader object inSocket.readLine.
# Call the close() method on the socket object after everything
Note:
Always add some print statement after calling any of the socket object method as a means of debugging










**********************************
Surround the lines of code in the server class with a try-catch block.